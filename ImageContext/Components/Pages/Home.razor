@page "/"
@using System.Data
@using ExifLib
@using ImageContext.Components.Services

@inject IConfiguration Configuration

@rendermode InteractiveServer


<PageTitle>Home</PageTitle>

<div>Select your file:</div>
<InputFile OnChange="FileUploaded" accept="image/*" />
<p role="status">Message: @_resultMessage</p>

<div></div>

@code {
    private readonly HttpClient _httpClient = new HttpClient();
    
    private string _resultMessage = "Waiting for file upload...";
    private const string SuccessMessage = "Image uploaded successfully";
    private const string InvalidFileMessage = "Error: Invalid file type";

    private async Task FileUploaded(InputFileChangeEventArgs e)
    {
        // Return if not a heif or jpeg file
        if (e.File.ContentType != "image/heif" && e.File.ContentType != "image/jpeg")
        {
            _resultMessage = InvalidFileMessage;
            return;
        }

        try
        {
            var imageMetadata = await new ExifExtractService().ExtractExifData(e.File);
            _resultMessage = SuccessMessage;
            
            Console.WriteLine(imageMetadata.DateTaken);

            if (imageMetadata.Coordinates != null)
            {
                var location = await new GeocodingService(Configuration, _httpClient).GetLocationData(imageMetadata.Coordinates);
                _resultMessage = location.Item1;
                Console.WriteLine(location.Item1);
                foreach (string s in location.Item2)
                {
                    Console.WriteLine(s);
                }
            }
            else
            {
                Console.WriteLine("No Location Data Available");
            }
        }
        catch (ExifLibException ex)
        {
            _resultMessage = $"Error: {ex.Message}";
        }
        catch (Exception ex)
        {
            _resultMessage = $"Error: {ex.Message}";
        }
        
        
    }

}